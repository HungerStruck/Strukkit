From e1d2c27f6b1369aba4cc80b28ab703029952bf61 Mon Sep 17 00:00:00 2001
From: hdt80 <ifyoucanrememberthisforgetit@gmail.com>
Date: Mon, 5 Sep 2016 11:48:58 -0700
Subject: [PATCH] Add UnderwaterVelocityModifier


diff --git a/src/main/java/net/minecraft/server/BlockTNT.java b/src/main/java/net/minecraft/server/BlockTNT.java
index e269286..5b75e96 100644
--- a/src/main/java/net/minecraft/server/BlockTNT.java
+++ b/src/main/java/net/minecraft/server/BlockTNT.java
@@ -89,7 +89,7 @@ public class BlockTNT extends Block {
 
             if (item == Items.FLINT_AND_STEEL || item == Items.FIRE_CHARGE) {
                 try { primer = entityhuman; // SportBukkit
-                this.a(world, blockposition, iblockdata.set(BlockTNT.EXPLODE, Boolean.valueOf(true)), (EntityLiving) entityhuman);
+                    this.a(world, blockposition, iblockdata.set(BlockTNT.EXPLODE, Boolean.valueOf(true)), (EntityLiving) entityhuman);
                 } finally { primer = null; } // SportBukkit
                 // CraftBukkit start - don't remove block if TNT priming is cancelled
                 if (removeBlock) {
diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 04863b3..214aa3e 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -1,11 +1,12 @@
 package net.minecraft.server;
 
-import java.util.List;
-
-// CraftBukkit start
 import org.bukkit.entity.LivingEntity;
 import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.player.PlayerPickupItemEvent;
+
+import java.util.List;
+
+// CraftBukkit start
 // CraftBukkit end
 
 public class EntityArrow extends Entity implements IProjectile {
@@ -23,6 +24,7 @@ public class EntityArrow extends Entity implements IProjectile {
     private int as;
     private double damage = 2.0D;
     public int knockbackStrength;
+	public float underwaterVelocityMod; // Strukkit
 
     public EntityArrow(World world) {
         super(world);
@@ -46,6 +48,8 @@ public class EntityArrow extends Entity implements IProjectile {
             this.fromPlayer = 1;
         }
 
+        this.underwaterVelocityMod = 0.6F; // Strukkit
+
         this.locY = entityliving.locY + (double) entityliving.getHeadHeight() - 0.10000000149011612D;
         double d0 = entityliving1.locX - entityliving.locX;
         double d1 = entityliving1.getBoundingBox().b + (double) (entityliving1.length / 3.0F) - this.locY;
@@ -340,7 +344,10 @@ public class EntityArrow extends Entity implements IProjectile {
                     this.world.addParticle(EnumParticle.WATER_BUBBLE, this.locX - this.motX * (double) f3, this.locY - this.motY * (double) f3, this.locZ - this.motZ * (double) f3, this.motX, this.motY, this.motZ, new int[0]);
                 }
 
-                f4 = 0.6F;
+                // Strukkit start
+				// TODO: Arrows still appear they're falling down client-side
+                f4 = this.underwaterVelocityMod;
+				// Strukkit end
             }
 
             if (this.U()) {
diff --git a/src/main/java/net/minecraft/server/EntityProjectile.java b/src/main/java/net/minecraft/server/EntityProjectile.java
index 72478be..dd424f1 100644
--- a/src/main/java/net/minecraft/server/EntityProjectile.java
+++ b/src/main/java/net/minecraft/server/EntityProjectile.java
@@ -15,6 +15,7 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
     public String shooterName;
     private int i;
     private int ar;
+    public float underwaterVelocityMod; // Strukkit
 
     public EntityProjectile(World world) {
         super(world);
@@ -27,6 +28,7 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
         super(world);
         this.shooter = entityliving;
         this.projectileSource = (org.bukkit.entity.LivingEntity) entityliving.getBukkitEntity(); // CraftBukkit
+		this.underwaterVelocityMod = 0.8F; // Strukkit
         this.setSize(0.25F, 0.25F);
         this.setPositionRotation(entityliving.locX, entityliving.locY + (double) entityliving.getHeadHeight(), entityliving.locZ, entityliving.yaw, entityliving.pitch);
         this.locX -= (double) (MathHelper.cos(this.yaw / 180.0F * 3.1415927F) * 0.16F);
@@ -195,7 +197,10 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
                 this.world.addParticle(EnumParticle.WATER_BUBBLE, this.locX - this.motX * (double) f4, this.locY - this.motY * (double) f4, this.locZ - this.motZ * (double) f4, this.motX, this.motY, this.motZ, new int[0]);
             }
 
-            f2 = 0.8F;
+            // Strukkit start
+			f2 = underwaterVelocityMod;
+			//f2 = 0.8F;
+			// Strukkit end
         }
 
         this.motX *= (double) f2;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/AbstractProjectile.java b/src/main/java/org/bukkit/craftbukkit/entity/AbstractProjectile.java
index 7c16255..f3534a4 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/AbstractProjectile.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/AbstractProjectile.java
@@ -6,10 +6,12 @@ import org.bukkit.entity.Projectile;
 public abstract class AbstractProjectile extends CraftEntity implements Projectile {
 
     private boolean doesBounce;
+    private float underwaterVelocityMod;
 
     public AbstractProjectile(CraftServer server, net.minecraft.server.Entity entity) {
         super(server, entity);
         doesBounce = false;
+        underwaterVelocityMod = 0.6f;
     }
 
     public boolean doesBounce() {
@@ -20,4 +22,12 @@ public abstract class AbstractProjectile extends CraftEntity implements Projecti
         this.doesBounce = doesBounce;
     }
 
+    public float getUnderwaterVelocityModifier() {
+        return underwaterVelocityMod;
+    }
+
+    public void setUnderwaterVelocityModifier(float mod) {
+        this.underwaterVelocityMod = mod;
+    }
+
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java
index dca8520..a1a4d91 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftArrow.java
@@ -15,6 +15,15 @@ public class CraftArrow extends AbstractProjectile implements Arrow {
         super(server, entity);
     }
 
+    public float getUnderwaterVelocityModifier() {
+        return getHandle().underwaterVelocityMod;
+    }
+
+    public void setUnderwaterVelocityModifier(float mod) {
+		Validate.isTrue(mod > 0, "Underwater velocity modifier cannot be negative");
+		this.getHandle().underwaterVelocityMod = mod;
+    }
+
     public void setKnockbackStrength(int knockbackStrength) {
         Validate.isTrue(knockbackStrength >= 0, "Knockback cannot be negative");
         getHandle().setKnockbackStrength(knockbackStrength);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftProjectile.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftProjectile.java
index 2f29f2f..d93bb93 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftProjectile.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftProjectile.java
@@ -13,10 +13,16 @@ public abstract class CraftProjectile extends AbstractProjectile implements Proj
         super(server, entity);
     }
 
+	// Strukkit start
     public ProjectileSource getShooter() {
         return getHandle().projectileSource;
     }
 
+    public float getUnderwaterVelocityModifier() {
+        return getHandle().underwaterVelocityMod;
+    }
+    // Strukkit end
+
     public void setShooter(ProjectileSource shooter) {
         if (shooter instanceof CraftLivingEntity) {
             getHandle().shooter = (EntityLiving) ((CraftLivingEntity) shooter).entity;
@@ -40,7 +46,6 @@ public abstract class CraftProjectile extends AbstractProjectile implements Proj
         return "CraftProjectile";
     }
 
-
     @Deprecated
     public LivingEntity _INVALID_getShooter() {
         if (getHandle().shooter == null) {
-- 
2.8.1.windows.1

